{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://apai.org/schemas/0.1.0/schema.json",
    "title": "APAI Specification Schema",
    "description": "JSON Schema for APAI 0.1.0 specifications",
    "type": "object",
    "required": [
        "apai",
        "info"
    ],
    "properties": {
        "apai": {
            "type": "string",
            "pattern": "^0\\.1\\.\\d+$",
            "description": "APAI specification version"
        },
        "inherits": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "description": "List of APAI specifications to inherit from (hierarchical composition)"
        },
        "info": {
            "type": "object",
            "required": [
                "title",
                "version",
                "description",
                "author",
                "license"
            ],
            "properties": {
                "title": {
                    "type": "string",
                    "description": "AI system name"
                },
                "version": {
                    "type": "string",
                    "description": "System version"
                },
                "description": {
                    "type": "string",
                    "description": "System description"
                },
                "author": {
                    "type": "string",
                    "description": "Author or team name"
                },
                "license": {
                    "type": "string",
                    "enum": [
                        "MIT",
                        "Apache-2.0",
                        "GPL-3.0",
                        "GPL-2.0",
                        "LGPL-3.0",
                        "LGPL-2.1",
                        "BSD-3-Clause",
                        "BSD-2-Clause",
                        "ISC",
                        "Unlicense",
                        "CC0-1.0",
                        "CC-BY-4.0",
                        "CC-BY-SA-4.0",
                        "CC-BY-NC-4.0",
                        "CC-BY-NC-SA-4.0",
                        "MPL-2.0",
                        "EPL-2.0",
                        "AGPL-3.0",
                        "AGPL-3.0-or-later",
                        "GPL-3.0-or-later",
                        "LGPL-3.0-or-later",
                        "custom",
                        "proprietary",
                        "other"
                    ],
                    "description": "License identifier"
                },
                "contact": {
                    "type": "object",
                    "properties": {
                        "email": {
                            "type": "string",
                            "format": "email"
                        },
                        "url": {
                            "type": "string",
                            "format": "uri"
                        }
                    }
                },
                "ai_metadata": {
                    "type": "object",
                    "properties": {
                        "domain": {
                            "type": "string",
                            "enum": [
                                "customer_service",
                                "content_generation",
                                "data_analysis",
                                "automation",
                                "security",
                                "research",
                                "education",
                                "healthcare",
                                "finance",
                                "retail",
                                "manufacturing",
                                "logistics",
                                "entertainment",
                                "gaming",
                                "social_media",
                                "e_learning",
                                "consulting",
                                "legal",
                                "real_estate",
                                "travel",
                                "food",
                                "sports",
                                "news",
                                "weather",
                                "utilities",
                                "government",
                                "non_profit",
                                "other"
                            ],
                            "description": "Application domain"
                        },
                        "complexity": {
                            "type": "string",
                            "enum": [
                                "low",
                                "medium",
                                "high"
                            ],
                            "description": "System complexity level"
                        },
                        "deployment": {
                            "type": "string",
                            "enum": [
                                "development",
                                "staging",
                                "production"
                            ],
                            "description": "Deployment environment"
                        },
                        "last_updated": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Last update timestamp"
                        },
                        "supported_languages": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "en",
                                    "it",
                                    "es",
                                    "fr",
                                    "de",
                                    "pt",
                                    "ru",
                                    "zh",
                                    "ja",
                                    "ko",
                                    "ar",
                                    "hi",
                                    "th",
                                    "vi",
                                    "id",
                                    "ms",
                                    "tl",
                                    "nl",
                                    "sv",
                                    "da",
                                    "no",
                                    "fi",
                                    "pl",
                                    "cs",
                                    "sk",
                                    "hu",
                                    "ro",
                                    "bg",
                                    "hr",
                                    "sr",
                                    "sl",
                                    "et",
                                    "lv",
                                    "lt",
                                    "el",
                                    "tr",
                                    "he",
                                    "fa",
                                    "ur",
                                    "bn",
                                    "ta",
                                    "te",
                                    "ml",
                                    "kn",
                                    "gu",
                                    "pa",
                                    "or",
                                    "as",
                                    "ne",
                                    "si",
                                    "my",
                                    "km",
                                    "lo",
                                    "ka",
                                    "hy",
                                    "az",
                                    "kk",
                                    "ky",
                                    "uz",
                                    "tg",
                                    "mn",
                                    "bo",
                                    "dz",
                                    "ug",
                                    "yi",
                                    "cy",
                                    "ga",
                                    "is",
                                    "mt",
                                    "eu",
                                    "ca",
                                    "gl",
                                    "af",
                                    "sw",
                                    "zu",
                                    "xh",
                                    "st",
                                    "tn",
                                    "ss",
                                    "ve",
                                    "ts",
                                    "nr",
                                    "nso",
                                    "wo",
                                    "ff",
                                    "ha",
                                    "ig",
                                    "yo",
                                    "tw",
                                    "ak",
                                    "lg",
                                    "ln",
                                    "kg",
                                    "sw",
                                    "so",
                                    "om",
                                    "ti",
                                    "am",
                                    "gez",
                                    "tig",
                                    "wal",
                                    "gurage",
                                    "sidamo",
                                    "hadiyya",
                                    "kambaata",
                                    "gamo",
                                    "gofa",
                                    "dawro",
                                    "wolaytta",
                                    "gumuz",
                                    "berta",
                                    "kunama",
                                    "nara",
                                    "surmic",
                                    "nilo_saharan",
                                    "cushitic",
                                    "omotic",
                                    "semitic",
                                    "other"
                                ]
                            },
                            "description": "Supported languages (ISO 639-1 codes)"
                        },
                        "hierarchy_info": {
                            "type": "object",
                            "properties": {
                                "level": {
                                    "type": "string",
                                    "enum": [
                                        "global",
                                        "regional",
                                        "department",
                                        "team",
                                        "sprint",
                                        "feature",
                                        "environment"
                                    ],
                                    "description": "Hierarchy level of this specification"
                                },
                                "parent_specs": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "Parent specifications in hierarchy"
                                },
                                "scope": {
                                    "type": "string",
                                    "enum": [
                                        "organization",
                                        "department",
                                        "team",
                                        "project",
                                        "feature",
                                        "environment"
                                    ],
                                    "description": "Scope of this specification"
                                },
                                "inheritance_mode": {
                                    "type": "string",
                                    "enum": [
                                        "merge",
                                        "override",
                                        "extend"
                                    ],
                                    "description": "How this spec inherits from parents"
                                }
                            }
                        }
                    }
                }
            }
        },
        "models": {
            "type": "array",
            "minItems": 1,
            "items": {
                "type": "object",
                "required": [
                    "id",
                    "type",
                    "provider",
                    "name",
                    "purpose"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Unique model identifier"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "LLM",
                            "Vision",
                            "Audio",
                            "Multimodal",
                            "Classification",
                            "Embedding"
                        ],
                        "description": "Model type"
                    },
                    "provider": {
                        "type": "string",
                        "enum": [
                            "openai",
                            "anthropic",
                            "google",
                            "huggingface",
                            "cohere",
                            "mistral",
                            "meta",
                            "amazon",
                            "microsoft",
                            "nvidia",
                            "stability",
                            "replicate",
                            "together",
                            "custom",
                            "other"
                        ],
                        "description": "Model provider"
                    },
                    "name": {
                        "type": "string",
                        "description": "Model name"
                    },
                    "version": {
                        "type": "string",
                        "description": "Model version"
                    },
                    "purpose": {
                        "type": "string",
                        "description": "Model purpose"
                    },
                    "capabilities": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Model capabilities"
                    },
                    "parameters": {
                        "type": "object",
                        "properties": {
                            "temperature": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 2
                            },
                            "max_tokens": {
                                "type": "integer",
                                "minimum": 1
                            },
                            "top_p": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 1
                            },
                            "frequency_penalty": {
                                "type": "number",
                                "minimum": -2,
                                "maximum": 2
                            },
                            "presence_penalty": {
                                "type": "number",
                                "minimum": -2,
                                "maximum": 2
                            }
                        }
                    },
                    "limits": {
                        "type": "object",
                        "properties": {
                            "max_input_tokens": {
                                "type": "integer",
                                "minimum": 1
                            },
                            "max_output_tokens": {
                                "type": "integer",
                                "minimum": 1
                            },
                            "requests_per_minute": {
                                "type": "integer",
                                "minimum": 1
                            }
                        }
                    },
                    "cost": {
                        "type": "object",
                        "properties": {
                            "input_per_1k_tokens": {
                                "type": "number",
                                "minimum": 0
                            },
                            "output_per_1k_tokens": {
                                "type": "number",
                                "minimum": 0
                            },
                            "currency": {
                                "type": "string",
                                "enum": [
                                    "USD",
                                    "EUR",
                                    "GBP",
                                    "JPY",
                                    "CAD",
                                    "AUD",
                                    "CHF",
                                    "CNY",
                                    "SEK",
                                    "NOK",
                                    "DKK",
                                    "PLN",
                                    "CZK",
                                    "HUF",
                                    "RUB",
                                    "BRL",
                                    "INR",
                                    "KRW",
                                    "SGD",
                                    "HKD",
                                    "NZD",
                                    "MXN",
                                    "ZAR",
                                    "TRY",
                                    "ILS",
                                    "AED",
                                    "SAR",
                                    "QAR",
                                    "KWD",
                                    "BHD",
                                    "OMR",
                                    "JOD",
                                    "LBP",
                                    "EGP",
                                    "MAD",
                                    "TND",
                                    "DZD",
                                    "LYD",
                                    "SDG",
                                    "ETB",
                                    "KES",
                                    "UGX",
                                    "TZS",
                                    "RWF",
                                    "BIF",
                                    "DJF",
                                    "SOS",
                                    "ERN",
                                    "SLL",
                                    "GMD",
                                    "GNF",
                                    "LRD",
                                    "CDF",
                                    "AOA",
                                    "BWP",
                                    "LSL",
                                    "SZL",
                                    "ZMW",
                                    "MWK",
                                    "MZN",
                                    "SCR",
                                    "MUR",
                                    "KMF",
                                    "MGA",
                                    "MVR",
                                    "NPR",
                                    "PKR",
                                    "BDT",
                                    "LKR",
                                    "AFN",
                                    "BTN",
                                    "MMK",
                                    "LAK",
                                    "KHR",
                                    "VND",
                                    "THB",
                                    "MYR",
                                    "IDR",
                                    "PHP",
                                    "TWD",
                                    "MOP",
                                    "BND",
                                    "FJD",
                                    "PGK",
                                    "SBD",
                                    "VUV",
                                    "WST",
                                    "TOP",
                                    "XPF",
                                    "CUP",
                                    "DOP",
                                    "HTG",
                                    "JMD",
                                    "BBD",
                                    "BZD",
                                    "XCD",
                                    "AWG",
                                    "BMD",
                                    "KYD",
                                    "GYD",
                                    "SRD",
                                    "TTD",
                                    "VES",
                                    "BOB",
                                    "CLP",
                                    "COP",
                                    "PEN",
                                    "UYU",
                                    "PYG",
                                    "ARS",
                                    "BRL",
                                    "FKP",
                                    "GIP",
                                    "SHP",
                                    "GBP",
                                    "EUR",
                                    "USD"
                                ],
                                "description": "Currency code (ISO 4217)"
                            }
                        }
                    },
                    "performance": {
                        "type": "object",
                        "properties": {
                            "accuracy": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 1
                            },
                            "latency": {
                                "type": "string"
                            },
                            "throughput": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "prompts": {
            "type": "array",
            "items": {
                "type": "object",
                "required": [
                    "id",
                    "role",
                    "template"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Unique prompt identifier"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "system",
                            "user",
                            "assistant"
                        ],
                        "description": "Prompt role"
                    },
                    "style": {
                        "type": "string",
                        "description": "Prompt style"
                    },
                    "language": {
                        "type": "string",
                        "description": "Prompt language"
                    },
                    "template": {
                        "type": "string",
                        "description": "Prompt template with variables"
                    },
                    "variables": {
                        "type": "object",
                        "patternProperties": {
                            "^[a-zA-Z_][a-zA-Z0-9_]*$": {
                                "type": "object",
                                "required": [
                                    "type"
                                ],
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "string",
                                            "number",
                                            "boolean",
                                            "array",
                                            "object"
                                        ]
                                    },
                                    "required": {
                                        "type": "boolean"
                                    },
                                    "default": {},
                                    "enum": {
                                        "type": "array"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "config": {
                        "type": "object",
                        "properties": {
                            "temperature": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 2
                            },
                            "max_tokens": {
                                "type": "integer",
                                "minimum": 1
                            }
                        }
                    }
                }
            }
        },
        "constraints": {
            "type": "array",
            "items": {
                "type": "object",
                "required": [
                    "id",
                    "rule",
                    "severity"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Unique constraint identifier"
                    },
                    "name": {
                        "type": "string",
                        "description": "Constraint name"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "content_safety",
                            "privacy",
                            "performance",
                            "budget",
                            "fairness"
                        ],
                        "description": "Constraint type"
                    },
                    "rule": {
                        "type": "string",
                        "description": "Constraint rule expression"
                    },
                    "severity": {
                        "type": "string",
                        "enum": [
                            "low",
                            "medium",
                            "high",
                            "critical"
                        ],
                        "description": "Severity level"
                    },
                    "enforcement": {
                        "type": "string",
                        "enum": [
                            "automatic",
                            "monitoring",
                            "manual"
                        ],
                        "description": "Enforcement method"
                    },
                    "description": {
                        "type": "string",
                        "description": "Constraint description"
                    },
                    "actions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Actions to take when constraint is violated"
                    }
                }
            }
        },
        "tasks": {
            "type": "array",
            "items": {
                "type": "object",
                "required": [
                    "id",
                    "description"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Unique task identifier"
                    },
                    "name": {
                        "type": "string",
                        "description": "Task name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Task description"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "conversational",
                            "analysis",
                            "generation",
                            "classification"
                        ],
                        "description": "Task type"
                    },
                    "priority": {
                        "type": "string",
                        "enum": [
                            "low",
                            "medium",
                            "high",
                            "critical"
                        ],
                        "description": "Task priority"
                    },
                    "input": {
                        "type": "object",
                        "patternProperties": {
                            "^[a-zA-Z_][a-zA-Z0-9_]*$": {
                                "type": "object",
                                "required": [
                                    "type"
                                ],
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "string",
                                            "number",
                                            "boolean",
                                            "array",
                                            "object"
                                        ]
                                    },
                                    "required": {
                                        "type": "boolean"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "output": {
                        "type": "object",
                        "patternProperties": {
                            "^[a-zA-Z_][a-zA-Z0-9_]*$": {
                                "type": "object",
                                "required": [
                                    "type"
                                ],
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "string",
                                            "number",
                                            "boolean",
                                            "array",
                                            "object"
                                        ]
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "minimum": {
                                        "type": "number"
                                    },
                                    "maximum": {
                                        "type": "number"
                                    },
                                    "items": {
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "steps": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "name",
                                "action"
                            ],
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Step name"
                                },
                                "action": {
                                    "type": "string",
                                    "enum": [
                                        "analyze",
                                        "generate",
                                        "validate",
                                        "search",
                                        "escalate",
                                        "classify",
                                        "mcp_tool",
                                        "mcp_resource",
                                        "automation"
                                    ],
                                    "description": "Action type"
                                },
                                "model": {
                                    "type": "string",
                                    "description": "Referenced model ID"
                                },
                                "prompt": {
                                    "type": "string",
                                    "description": "Referenced prompt ID"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "Data source"
                                },
                                "mcp_server": {
                                    "type": "string",
                                    "description": "Referenced MCP server ID"
                                },
                                "mcp_tool": {
                                    "type": "string",
                                    "description": "MCP tool name (if action is mcp_tool)"
                                },
                                "mcp_resource": {
                                    "type": "string",
                                    "description": "MCP resource name (if action is mcp_resource)"
                                },
                                "mcp_parameters": {
                                    "type": "object",
                                    "description": "Parameters for MCP tool/resource"
                                },
                                "automation": {
                                    "type": "string",
                                    "description": "Referenced automation ID (if action is automation)"
                                },
                                "automation_parameters": {
                                    "type": "object",
                                    "description": "Parameters for automation"
                                },
                                "check_automation": {
                                    "type": "string",
                                    "description": "Automation ID to check status (for wait actions)"
                                },
                                "constraints": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "Referenced constraint IDs"
                                },
                                "conditions": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "if",
                                            "then"
                                        ],
                                        "properties": {
                                            "if": {
                                                "type": "string",
                                                "description": "Condition expression"
                                            },
                                            "then": {
                                                "type": "string",
                                                "description": "Next step or action"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "automations": {
            "type": "array",
            "items": {
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "description",
                    "provider",
                    "trigger",
                    "integration",
                    "data_contract"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Unique automation identifier"
                    },
                    "name": {
                        "type": "string",
                        "description": "Automation name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Automation description"
                    },
                    "provider": {
                        "type": "string",
                        "enum": [
                            "n8n",
                            "zapier",
                            "power_automate",
                            "airtable",
                            "make",
                            "integromat",
                            "automate_io",
                            "ifttt",
                            "custom",
                            "other"
                        ],
                        "description": "Automation platform provider"
                    },
                    "version": {
                        "type": "string",
                        "description": "Automation version"
                    },
                    "trigger": {
                        "type": "object",
                        "required": [
                            "type"
                        ],
                        "properties": {
                            "type": {
                                "type": "string",
                                "enum": [
                                    "webhook",
                                    "scheduled",
                                    "event",
                                    "manual"
                                ],
                                "description": "Trigger type"
                            },
                            "endpoint": {
                                "type": "string",
                                "description": "Webhook endpoint URL"
                            },
                            "method": {
                                "type": "string",
                                "description": "HTTP method for webhook triggers"
                            },
                            "schedule": {
                                "type": "string",
                                "description": "Cron expression for scheduled triggers"
                            },
                            "authentication": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "none",
                                            "api_key",
                                            "bearer",
                                            "basic"
                                        ]
                                    },
                                    "header": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            "conditions": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "description": "Trigger conditions"
                            }
                        }
                    },
                    "integration": {
                        "type": "object",
                        "required": [
                            "type"
                        ],
                        "properties": {
                            "type": {
                                "type": "string",
                                "enum": [
                                    "external_workflow",
                                    "webhook",
                                    "api_call",
                                    "zap",
                                    "flow"
                                ],
                                "description": "Integration type"
                            },
                            "workflow_id": {
                                "type": "string",
                                "description": "External workflow identifier"
                            },
                            "environment": {
                                "type": "string",
                                "description": "Environment where automation runs"
                            },
                            "timeout": {
                                "type": "string",
                                "description": "Maximum execution time"
                            },
                            "retry_policy": {
                                "type": "object",
                                "properties": {
                                    "max_retries": {
                                        "type": "number"
                                    },
                                    "backoff_strategy": {
                                        "type": "string",
                                        "enum": [
                                            "linear",
                                            "exponential"
                                        ]
                                    },
                                    "initial_delay": {
                                        "type": "number"
                                    }
                                }
                            }
                        }
                    },
                    "data_contract": {
                        "type": "object",
                        "properties": {
                            "input": {
                                "type": "object",
                                "description": "Input data schema"
                            },
                            "output": {
                                "type": "object",
                                "description": "Output data schema"
                            }
                        }
                    },
                    "monitoring": {
                        "type": "object",
                        "properties": {
                            "health_check": {
                                "type": "object",
                                "properties": {
                                    "endpoint": {
                                        "type": "string"
                                    },
                                    "interval": {
                                        "type": "string"
                                    },
                                    "timeout": {
                                        "type": "string"
                                    }
                                }
                            },
                            "metrics": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "required": [
                                        "name",
                                        "description"
                                    ],
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "target": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "metadata": {
                        "type": "object",
                        "properties": {
                            "tags": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "category": {
                                "type": "string"
                            },
                            "maintainer": {
                                "type": "string"
                            },
                            "documentation_url": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "context": {
            "type": "object",
            "properties": {
                "memory": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "enum": [
                                "session",
                                "persistent",
                                "temporary"
                            ]
                        },
                        "retention": {
                            "type": "string"
                        },
                        "scope": {
                            "type": "string",
                            "enum": [
                                "per_user",
                                "global",
                                "per_session"
                            ]
                        },
                        "storage": {
                            "type": "object",
                            "properties": {
                                "provider": {
                                    "type": "string"
                                },
                                "ttl": {
                                    "type": "integer"
                                },
                                "max_size": {
                                    "type": "string"
                                }
                            }
                        },
                        "store": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "exclude": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "conversation": {
                    "type": "object",
                    "properties": {
                        "max_turns": {
                            "type": "integer"
                        },
                        "context_window": {
                            "type": "integer"
                        },
                        "summary_frequency": {
                            "type": "integer"
                        },
                        "summary_template": {
                            "type": "string"
                        }
                    }
                },
                "business_context": {
                    "type": "object",
                    "properties": {
                        "company_info": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "industry": {
                                    "type": "string"
                                },
                                "products": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "policies": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "knowledge_base": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "provider": {
                                    "type": "string"
                                },
                                "index_name": {
                                    "type": "string"
                                },
                                "embedding_model": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "mcp_servers": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "id",
                            "name",
                            "description",
                            "version",
                            "transport",
                            "capabilities",
                            "authentication"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "description": "Unique server identifier"
                            },
                            "name": {
                                "type": "string",
                                "description": "Server name"
                            },
                            "description": {
                                "type": "string",
                                "description": "Server description"
                            },
                            "version": {
                                "type": "string",
                                "description": "MCP server version"
                            },
                            "transport": {
                                "type": "object",
                                "required": [
                                    "type"
                                ],
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "stdio",
                                            "sse",
                                            "websocket"
                                        ],
                                        "description": "Transport protocol type"
                                    },
                                    "command": {
                                        "type": "string",
                                        "description": "Command to start server (for stdio)"
                                    },
                                    "args": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "Command arguments"
                                    },
                                    "url": {
                                        "type": "string",
                                        "description": "Server URL (for sse/websocket)"
                                    },
                                    "headers": {
                                        "type": "object",
                                        "description": "Custom headers"
                                    }
                                }
                            },
                            "capabilities": {
                                "type": "object",
                                "properties": {
                                    "tools": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "Available tools"
                                    },
                                    "resources": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "Available resources"
                                    },
                                    "prompts": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "Available prompts"
                                    }
                                }
                            },
                            "authentication": {
                                "type": "object",
                                "required": [
                                    "type"
                                ],
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "none",
                                            "api_key",
                                            "oauth",
                                            "custom"
                                        ],
                                        "description": "Authentication type"
                                    },
                                    "api_key": {
                                        "type": "string",
                                        "description": "API key (if applicable)"
                                    },
                                    "token": {
                                        "type": "string",
                                        "description": "Access token (if applicable)"
                                    },
                                    "custom_auth": {
                                        "type": "object",
                                        "description": "Custom authentication configuration"
                                    }
                                }
                            },
                            "security": {
                                "type": "object",
                                "properties": {
                                    "allowed_operations": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "Allowed operations"
                                    },
                                    "rate_limits": {
                                        "type": "object",
                                        "properties": {
                                            "requests_per_minute": {
                                                "type": "number"
                                            },
                                            "requests_per_hour": {
                                                "type": "number"
                                            }
                                        }
                                    },
                                    "timeout": {
                                        "type": "number",
                                        "description": "Request timeout in seconds"
                                    }
                                }
                            },
                            "health_check": {
                                "type": "object",
                                "properties": {
                                    "enabled": {
                                        "type": "boolean"
                                    },
                                    "interval": {
                                        "type": "number",
                                        "description": "Check interval in seconds"
                                    },
                                    "timeout": {
                                        "type": "number",
                                        "description": "Health check timeout"
                                    },
                                    "retry_count": {
                                        "type": "number",
                                        "description": "Retry attempts"
                                    }
                                }
                            },
                            "metadata": {
                                "type": "object",
                                "properties": {
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "Server tags"
                                    },
                                    "category": {
                                        "type": "string",
                                        "description": "Server category"
                                    },
                                    "maintainer": {
                                        "type": "string",
                                        "description": "Server maintainer"
                                    },
                                    "documentation_url": {
                                        "type": "string",
                                        "description": "Documentation URL"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "evaluation": {
            "type": "object",
            "properties": {
                "metrics": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "name",
                            "description",
                            "target"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Metric name"
                            },
                            "description": {
                                "type": "string",
                                "description": "Metric description"
                            },
                            "target": {},
                            "measurement": {
                                "type": "object",
                                "required": [
                                    "method"
                                ],
                                "properties": {
                                    "method": {
                                        "type": "string"
                                    },
                                    "sample_size": {
                                        "type": "integer"
                                    },
                                    "frequency": {
                                        "type": "string"
                                    },
                                    "criteria": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "percentiles": {
                                        "type": "array",
                                        "items": {
                                            "type": "number"
                                        }
                                    },
                                    "scale": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "test_cases": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "id",
                            "name",
                            "input",
                            "expected_behavior",
                            "category",
                            "priority"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "description": "Test case ID"
                            },
                            "name": {
                                "type": "string",
                                "description": "Test case name"
                            },
                            "input": {
                                "type": "string",
                                "description": "Test input"
                            },
                            "expected_behavior": {
                                "type": "string",
                                "description": "Expected behavior"
                            },
                            "category": {
                                "type": "string",
                                "enum": [
                                    "functional",
                                    "safety",
                                    "privacy",
                                    "performance"
                                ],
                                "description": "Test category"
                            },
                            "priority": {
                                "type": "string",
                                "enum": [
                                    "low",
                                    "medium",
                                    "high",
                                    "critical"
                                ],
                                "description": "Test priority"
                            }
                        }
                    }
                },
                "performance_tests": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "name",
                            "description"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Test name"
                            },
                            "description": {
                                "type": "string",
                                "description": "Test description"
                            },
                            "concurrent_users": {
                                "type": "integer"
                            },
                            "duration": {
                                "type": "string"
                            },
                            "target_response_time": {
                                "type": "string"
                            },
                            "target_throughput": {
                                "type": "string"
                            },
                            "target_availability": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "extensions": {
            "type": "object",
            "properties": {
                "vision_support": {
                    "type": "boolean"
                },
                "multilingual": {
                    "type": "boolean"
                },
                "audio_processing": {
                    "type": "boolean"
                },
                "real_time_processing": {
                    "type": "boolean"
                },
                "mcp_support": {
                    "type": "boolean",
                    "description": "Model Context Protocol support"
                },
                "automation_support": {
                    "type": "boolean",
                    "description": "External automation workflows support"
                },
                "advanced": {
                    "type": "object",
                    "properties": {
                        "computer_vision": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean"
                                },
                                "models": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                }
                            }
                        },
                        "audio_processing": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean"
                                },
                                "models": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                }
                            }
                        },
                        "multimodal": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean"
                                },
                                "models": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                }
                            }
                        },
                        "mcp": {
                            "type": "object",
                            "description": "Model Context Protocol configuration",
                            "properties": {
                                "enabled": {
                                    "type": "boolean"
                                },
                                "default_timeout": {
                                    "type": "number",
                                    "description": "Default timeout for MCP operations"
                                },
                                "retry_policy": {
                                    "type": "object",
                                    "properties": {
                                        "max_retries": {
                                            "type": "number"
                                        },
                                        "backoff_strategy": {
                                            "type": "string",
                                            "enum": [
                                                "linear",
                                                "exponential"
                                            ]
                                        },
                                        "initial_delay": {
                                            "type": "number"
                                        }
                                    }
                                },
                                "connection_pool": {
                                    "type": "object",
                                    "properties": {
                                        "max_connections": {
                                            "type": "number"
                                        },
                                        "idle_timeout": {
                                            "type": "number"
                                        }
                                    }
                                },
                                "monitoring": {
                                    "type": "object",
                                    "properties": {
                                        "enabled": {
                                            "type": "boolean"
                                        },
                                        "metrics_collection": {
                                            "type": "boolean"
                                        },
                                        "health_check_interval": {
                                            "type": "number"
                                        }
                                    }
                                }
                            }
                        },
                        "automation": {
                            "type": "object",
                            "description": "Automation configuration",
                            "properties": {
                                "enabled": {
                                    "type": "boolean"
                                },
                                "default_timeout": {
                                    "type": "number",
                                    "description": "Default timeout for automation operations"
                                },
                                "retry_policy": {
                                    "type": "object",
                                    "properties": {
                                        "max_retries": {
                                            "type": "number"
                                        },
                                        "backoff_strategy": {
                                            "type": "string",
                                            "enum": [
                                                "linear",
                                                "exponential"
                                            ]
                                        },
                                        "initial_delay": {
                                            "type": "number"
                                        }
                                    }
                                },
                                "monitoring": {
                                    "type": "object",
                                    "properties": {
                                        "enabled": {
                                            "type": "boolean"
                                        },
                                        "health_check_interval": {
                                            "type": "number"
                                        },
                                        "metrics_collection": {
                                            "type": "boolean"
                                        }
                                    }
                                },
                                "providers": {
                                    "type": "object",
                                    "properties": {
                                        "n8n": {
                                            "type": "object",
                                            "properties": {
                                                "base_url": {
                                                    "type": "string"
                                                },
                                                "api_version": {
                                                    "type": "string"
                                                },
                                                "timeout": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "zapier": {
                                            "type": "object",
                                            "properties": {
                                                "base_url": {
                                                    "type": "string"
                                                },
                                                "timeout": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "validation": {
            "type": "object",
            "properties": {
                "schema_version": {
                    "type": "string"
                },
                "required_sections": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "custom_validators": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "name",
                            "description"
                        ],
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "governance": {
            "type": "object",
            "properties": {
                "maintainers": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "name",
                            "email",
                            "role"
                        ],
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string",
                                "format": "email"
                            },
                            "role": {
                                "type": "string"
                            }
                        }
                    }
                },
                "contributors": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "name",
                            "email",
                            "role"
                        ],
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string",
                                "format": "email"
                            },
                            "role": {
                                "type": "string"
                            }
                        }
                    }
                },
                "review_process": {
                    "type": "string"
                },
                "approval_required": {
                    "type": "integer"
                },
                "testing_required": {
                    "type": "boolean"
                },
                "documentation_required": {
                    "type": "boolean"
                },
                "update_process": {
                    "type": "object",
                    "properties": {
                        "versioning": {
                            "type": "string"
                        },
                        "breaking_changes": {
                            "type": "string"
                        },
                        "deprecation_notice": {
                            "type": "string"
                        },
                        "migration_guide": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "additionalProperties": false
}
