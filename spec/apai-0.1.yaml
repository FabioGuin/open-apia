# APAI 0.1 - Open Artificial Intelligence Architecture Specification
# An open standard for describing, documenting, and validating AI systems
# Designed to be AI-native and vendor-agnostic

# =============================================================================
# SPECIFICATION METADATA
# =============================================================================
apai: "0.1.0"  # APAI specification version

# =============================================================================
# HIERARCHICAL COMPOSITION
# =============================================================================
inherits: [string]  # List of APAI specifications to inherit from
# Example: ["../apai-global.yaml", "../../apai-team.yaml"]

# =============================================================================
# AI SYSTEM METADATA
# =============================================================================
info:               # AI system metadata
  title: string     # System name
  version: string   # System version
  description: string  # System description
  author: string    # Author/team name
  license: string   # License identifier
  contact:          # Contact information
    email: string
    url: string
  
  ai_metadata:      # AI-specific metadata
    domain: string  # Application domain
    complexity: string  # Complexity level: low, medium, high
    deployment: string  # Deployment environment: development, staging, production
    last_updated: string  # ISO 8601 timestamp
    supported_languages: [string]  # Supported languages
    
    hierarchy_info: # Hierarchical composition metadata
      level: string  # Hierarchy level: global, regional, department, team, sprint, feature, environment
      parent_specs: [string]  # Parent specifications in hierarchy
      scope: string  # Scope: organization, department, team, project, feature, environment
      inheritance_mode: string  # Inheritance mode: merge, override, extend

# =============================================================================
# AI MODELS
# =============================================================================
models:             # List of AI models
  - id: string      # Unique model identifier
    type: string    # Model type: LLM, Vision, Audio, Multimodal, Classification, Embedding
    provider: string  # Model provider
    name: string    # Model name
    version: string # Model version
    purpose: string # Model purpose/use case
    capabilities: [string]  # Model capabilities
    parameters:     # Model parameters
      temperature: number
      max_tokens: number
      top_p: number
      frequency_penalty: number
      presence_penalty: number
    limits:         # Model limits
      max_input_tokens: number
      max_output_tokens: number
      requests_per_minute: number
    cost:           # Cost information
      input_per_1k_tokens: number
      output_per_1k_tokens: number
      currency: string
    performance:    # Performance metrics
      accuracy: number
      latency: string
      throughput: string

# =============================================================================
# PROMPTS
# =============================================================================
prompts:            # Structured prompts
  - id: string      # Unique prompt identifier
    role: string    # Prompt role: system, user, assistant
    style: string   # Prompt style
    language: string  # Prompt language
    template: string  # Prompt template with variables
    variables:      # Template variables
      variable_name:
        type: string  # Variable type: string, number, boolean, array, object
        required: boolean
        default: any
        enum: [any]  # Allowed values
        description: string
    config:         # Prompt configuration
      temperature: number
      max_tokens: number

# =============================================================================
# CONSTRAINTS
# =============================================================================
constraints:        # Safety, ethical, and operational constraints
  - id: string      # Unique constraint identifier
    name: string    # Constraint name
    type: string    # Constraint type: content_safety, privacy, performance, budget, fairness
    rule: string    # Constraint rule expression
    severity: string  # Severity level: low, medium, high, critical
    enforcement: string  # Enforcement method: automatic, monitoring, manual
    description: string  # Constraint description
    actions: [string]  # Actions to take when constraint is violated

# =============================================================================
# TASKS
# =============================================================================
tasks:              # Declarative workflows
  - id: string      # Unique task identifier
    name: string    # Task name
    description: string  # Task description
    type: string    # Task type: conversational, analysis, generation, classification
    priority: string  # Task priority: low, medium, high, critical
    
    input:          # Task input schema
      field_name:
        type: string  # Field type
        required: boolean
        description: string
    
    output:         # Task output schema
      field_name:
        type: string  # Field type
        description: string
        minimum: number  # For numeric types
        maximum: number  # For numeric types
        items: object  # For array types
    
    steps:          # Task execution steps
      - name: string  # Step name
        action: string  # Action type: analyze, generate, validate, search, escalate, classify, mcp_tool, mcp_resource, automation
        model: string  # Referenced model ID
        prompt: string  # Referenced prompt ID
        source: string  # Data source
        mcp_server: string  # Referenced MCP server ID
        mcp_tool: string  # MCP tool name (if action is mcp_tool)
        mcp_resource: string  # MCP resource name (if action is mcp_resource)
        mcp_parameters: object  # Parameters for MCP tool/resource
        automation: string  # Referenced automation ID (if action is automation)
        automation_parameters: object  # Parameters for automation
        check_automation: string  # Automation ID to check status (for wait actions)
        constraints: [string]  # Referenced constraint IDs
        conditions:    # Conditional execution
          - if: string  # Condition expression
            then: string  # Next step or action

# =============================================================================
# AUTOMATIONS
# =============================================================================
automations:        # External automation workflows
  - id: string      # Unique automation identifier
    name: string    # Automation name
    description: string  # Automation description
    provider: string  # Automation provider: n8n, zapier, power_automate, custom
    version: string  # Automation version
    
    trigger:        # Trigger configuration
      type: string  # Trigger type: webhook, scheduled, event, manual
      endpoint: string  # Webhook endpoint URL
      method: string  # HTTP method for webhooks
      schedule: string  # Cron expression for scheduled triggers
      authentication:  # Authentication configuration
        type: string  # Auth type: none, api_key, bearer, basic
        header: string  # Header name for API key
        value: string  # Authentication value
      conditions: [string]  # Trigger conditions
    
    integration:    # Integration configuration
      type: string  # Integration type: external_workflow, webhook, api_call, zap, flow
      workflow_id: string  # External workflow identifier
      environment: string  # Environment: production, staging, development
      timeout: string  # Maximum execution time
      retry_policy:  # Retry configuration
        max_retries: number
        backoff_strategy: string  # linear, exponential
        initial_delay: number
    
    data_contract:  # Data contract definition
      input: object  # Input data schema
      output: object  # Output data schema
    
    monitoring:     # Monitoring configuration
      health_check:  # Health check configuration
        endpoint: string  # Health check URL
        interval: string  # Check interval
        timeout: string  # Health check timeout
      metrics:  # Metrics to track
        - name: string
          description: string
          target: string
    
    metadata:       # Additional metadata
      tags: [string]  # Automation tags
      category: string  # Automation category
      maintainer: string  # Maintainer information
      documentation_url: string  # Documentation URL

# =============================================================================
# CONTEXT
# =============================================================================
context:            # State management and memory
  memory:           # Memory configuration
    type: string    # Memory type: session, persistent, temporary
    retention: string  # Retention period
    scope: string   # Memory scope: per_user, global, per_session
    storage:        # Storage configuration
      provider: string  # Storage provider
      ttl: number   # Time to live in seconds
      max_size: string  # Maximum storage size
    store: [string] # What to store
    exclude: [string]  # What not to store
  
  conversation:     # Conversation management
    max_turns: number  # Maximum conversation turns
    context_window: number  # Context window size
    summary_frequency: number  # How often to summarize
    summary_template: string  # Summary template
  
  business_context: # Business context
    company_info:   # Company information
      name: string
      industry: string
      products: [string]
      policies: [string]
    knowledge_base: # Knowledge base configuration
      type: string  # Knowledge base type
      provider: string  # Provider
      index_name: string  # Index name
      embedding_model: string  # Embedding model
  
  mcp_servers:     # Model Context Protocol servers
    - id: string   # Unique server identifier
      name: string # Server name
      description: string  # Server description
      version: string  # MCP server version
      transport:      # Transport configuration
        type: string  # Transport type: stdio, sse, websocket
        command: string  # Command to start server (for stdio)
        args: [string]  # Command arguments
        url: string  # Server URL (for sse/websocket)
        headers: object  # Custom headers
      capabilities:   # Server capabilities
        tools: [string]  # Available tools
        resources: [string]  # Available resources
        prompts: [string]  # Available prompts
      authentication: # Authentication configuration
        type: string  # Auth type: none, api_key, oauth, custom
        api_key: string  # API key (if applicable)
        token: string  # Access token (if applicable)
        custom_auth: object  # Custom auth configuration
      security:      # Security configuration
        allowed_operations: [string]  # Allowed operations
        rate_limits: object  # Rate limiting
          requests_per_minute: number
          requests_per_hour: number
        timeout: number  # Request timeout in seconds
      health_check:  # Health check configuration
        enabled: boolean
        interval: number  # Check interval in seconds
        timeout: number  # Health check timeout
        retry_count: number  # Retry attempts
      metadata:      # Additional metadata
        tags: [string]  # Server tags
        category: string  # Server category
        maintainer: string  # Server maintainer
        documentation_url: string  # Documentation URL

# =============================================================================
# EVALUATION
# =============================================================================
evaluation:         # Metrics and testing
  metrics:          # Performance metrics
    - name: string  # Metric name
      description: string  # Metric description
      target: any   # Target value
      measurement:  # Measurement configuration
        method: string  # Measurement method
        sample_size: number  # Sample size
        frequency: string  # Measurement frequency
        criteria: [string]  # Evaluation criteria
        percentiles: [number]  # For latency metrics
        scale: string  # For rating metrics
  
  test_cases:       # Automated test cases
    - id: string    # Test case ID
      name: string  # Test case name
      input: string # Test input
      expected_behavior: string  # Expected behavior
      category: string  # Test category: functional, safety, privacy, performance
      priority: string  # Test priority: low, medium, high, critical
  
  performance_tests: # Performance testing
    - name: string  # Test name
      description: string  # Test description
      concurrent_users: number  # Concurrent users
      duration: string  # Test duration
      target_response_time: string  # Target response time
      target_throughput: string  # Target throughput
      target_availability: string  # Target availability

# =============================================================================
# EXTENSIONS
# =============================================================================
extensions:         # Optional extensions
  vision_support: boolean  # Computer vision support
  multilingual: boolean  # Multilingual support
  audio_processing: boolean  # Audio processing support
  real_time_processing: boolean  # Real-time processing support

  mcp_support: boolean  # Model Context Protocol support
  automation_support: boolean  # External automation workflows support
  
  advanced:         # Advanced configurations
    computer_vision:  # Computer vision configuration
      enabled: boolean
      models: [object]
    audio_processing: # Audio processing configuration
      enabled: boolean
      models: [object]
    multimodal:      # Multimodal configuration
      enabled: boolean
      models: [object]

    mcp:            # Model Context Protocol configuration
      enabled: boolean
      default_timeout: number  # Default timeout for MCP operations
      retry_policy: object  # Retry configuration
        max_retries: number
        backoff_strategy: string  # linear, exponential
        initial_delay: number
      connection_pool: object  # Connection pool configuration
        max_connections: number
        idle_timeout: number
      monitoring: object  # MCP monitoring configuration
        enabled: boolean
        metrics_collection: boolean
        health_check_interval: number
    
    automation:     # Automation configuration
      enabled: boolean
      default_timeout: number  # Default timeout for automation operations
      retry_policy: object  # Retry configuration
        max_retries: number
        backoff_strategy: string  # linear, exponential
        initial_delay: number
      monitoring: object  # Automation monitoring configuration
        enabled: boolean
        health_check_interval: number
        metrics_collection: boolean
      providers: object  # Provider-specific configuration
        n8n: object  # n8n configuration
          base_url: string
          api_version: string
          timeout: number
        zapier: object  # Zapier configuration
          base_url: string
          timeout: number

# =============================================================================
# VALIDATION
# =============================================================================
validation:
  schema_version: string  # Schema version
  required_sections: [string]  # Required sections
  custom_validators:  # Custom validators
    - name: string
      description: string

# =============================================================================
# GOVERNANCE
# =============================================================================
governance:
  maintainers:      # Project maintainers
    - name: string
      email: string
      role: string
  
  contributors:     # Project contributors
    - name: string
      email: string
      role: string
  
  review_process: string  # Review process
  approval_required: number  # Required approvals
  testing_required: boolean  # Testing requirement
  documentation_required: boolean  # Documentation requirement
  
  update_process:   # Update process
    versioning: string  # Versioning strategy
    breaking_changes: string  # Breaking changes policy
    deprecation_notice: string  # Deprecation notice period
    migration_guide: string  # Migration guide requirement
