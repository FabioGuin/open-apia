# APAI 0.1 - Architecture Protocol for Artificial Intelligence Specification
# An open standard for describing, documenting, and validating AI systems
# Designed to be AI-native and vendor-agnostic

# =============================================================================
# SPECIFICATION METADATA
# =============================================================================
apai: "0.1.0"  # APAI specification version

# =============================================================================
# HIERARCHICAL COMPOSITION
# =============================================================================
inherits: [string]  # List of APAI specifications to inherit from
# Example: ["../apai-global.yaml", "../../apai-team.yaml"]

# =============================================================================
# AI SYSTEM METADATA
# =============================================================================
info:               # AI system metadata (required)
  title: string     # System name (required)
  version: string   # System version (required) - semantic versioning
  description: string  # System description (required)
  author: string    # Author/team name (required)
  license: string   # License identifier (required) - MIT, Apache-2.0, etc.
  contact:          # Contact information (optional)
    email: string   # Contact email
    url: string     # Contact website
    name: string    # Contact person/team name
  
  ai_metadata:      # AI-specific metadata (required)
    domain: string  # Application domain - customer_service, content_generation, etc.
    complexity: string  # Complexity level - low, medium, high, enterprise
    deployment: string  # Deployment environment - development, staging, production
    last_updated: string  # ISO 8601 timestamp (required)
    supported_languages: [string]  # Supported languages - en, it, es, etc.
    tags: [string]  # System tags for categorization
    
    hierarchy_info: # Hierarchical composition metadata (optional)
      level: string  # Hierarchy level - global, regional, department, team, sprint, feature, environment
      parent_specs: [string]  # Parent specifications in hierarchy
      scope: string  # Scope - organization, department, team, project, feature, environment
      inheritance_mode: string  # Inheritance mode - merge, override, extend

# =============================================================================
# AI MODELS
# =============================================================================
models:             # List of AI models (optional)
  - id: string      # Unique model identifier (required)
    type: string    # Model type - LLM, Vision, Audio, Multimodal, Classification, Embedding
    provider: string  # Model provider - OpenAI, Anthropic, Google, etc.
    name: string    # Model name (required)
    version: string # Model version (required)
    purpose: string # Model purpose/use case (required)
    capabilities: [string]  # Model capabilities - text-generation, conversation, etc.
    parameters:     # Model parameters (optional)
      temperature: number  # 0-2, controls randomness
      max_tokens: number   # Maximum tokens to generate
      top_p: number        # 0-1, nucleus sampling
      frequency_penalty: number  # -2 to 2
      presence_penalty: number   # -2 to 2
    limits:         # Model limits (optional)
      max_input_tokens: number
      max_output_tokens: number
      requests_per_minute: number
    cost:           # Cost information (optional)
      input_per_1k_tokens: number
      output_per_1k_tokens: number
      currency: string  # USD, EUR, etc.
    performance:    # Performance metrics (optional)
      accuracy: number    # 0-1 accuracy score
      latency: string     # Response time - "< 2s"
      throughput: string  # Throughput - "100 req/min"

# =============================================================================
# PROMPTS
# =============================================================================
prompts:            # Structured prompts (optional)
  - id: string      # Unique prompt identifier (required)
    role: string    # Prompt role - system, user, assistant
    style: string   # Prompt style - professional, casual, etc.
    language: string  # Prompt language - en, it, etc.
    template: string  # Prompt template with variables (required)
    variables:      # Template variables (optional)
      variable_name:
        type: string  # Variable type - string, number, boolean, array, object
        required: boolean
        default: any
        description: string
    config:         # Prompt configuration (optional)
      temperature: number
      max_tokens: number

# =============================================================================
# CONSTRAINTS
# =============================================================================
constraints:        # Safety, ethical, and operational constraints (optional)
  - id: string      # Unique constraint identifier (required)
    name: string    # Constraint name (required)
    type: string    # Constraint type - content_safety, privacy, performance, budget, fairness
    rule: string    # Constraint rule expression (required)
    severity: string  # Severity level - low, medium, high, critical
    enforcement: string  # Enforcement method - automatic, monitoring, manual
    description: string  # Constraint description (required)
    actions: [string]  # Actions to take when constraint is violated

# =============================================================================
# TASKS
# =============================================================================
tasks:              # Declarative workflows (optional)
  - id: string      # Unique task identifier (required)
    name: string    # Task name (required)
    description: string  # Task description (required)
    type: string    # Task type - conversational, analysis, generation, classification
    priority: string  # Task priority - low, medium, high, critical
    
    input:          # Task input schema (optional)
      field_name:
        type: string  # Field type
        required: boolean
        description: string
    
    output:         # Task output schema (optional)
      field_name:
        type: string  # Field type
        description: string
        minimum: number  # For numeric types
        maximum: number  # For numeric types
    
    steps:          # Task execution steps (required)
      - name: string  # Step name (required)
        action: string  # Action type - analyze, generate, validate, search, escalate, classify, mcp_tool, mcp_resource, automation
        model: string  # Referenced model ID
        prompt: string  # Referenced prompt ID
        source: string  # Data source
        mcp_server: string  # Referenced MCP server ID
        mcp_tool: string  # MCP tool name (if action is mcp_tool)
        mcp_resource: string  # MCP resource name (if action is mcp_resource)
        mcp_parameters: object  # Parameters for MCP tool/resource
        automation: string  # Referenced automation ID (if action is automation)
        automation_parameters: object  # Parameters for automation
        constraints: [string]  # Referenced constraint IDs
        conditions:    # Conditional execution (optional)
          - if: string  # Condition expression
            then: string  # Next step or action

# =============================================================================
# AUTOMATIONS
# =============================================================================
automations:        # External automation workflows (optional)
  - id: string      # Unique automation identifier (required)
    name: string    # Automation name (required)
    description: string  # Automation description (required)
    provider: string  # Automation provider - n8n, zapier, power_automate, custom
    version: string  # Automation version
    
    trigger:        # Trigger configuration (required)
      type: string  # Trigger type - webhook, scheduled, event, manual
      endpoint: string  # Webhook endpoint URL
      method: string  # HTTP method for webhooks
      schedule: string  # Cron expression for scheduled triggers
      authentication:  # Authentication configuration (optional)
        type: string  # Auth type - none, api_key, bearer, basic
        header: string  # Header name for API key
        value: string  # Authentication value
      conditions: [string]  # Trigger conditions
    
    integration:    # Integration configuration (required)
      type: string  # Integration type - external_workflow, webhook, api_call, zap, flow
      workflow_id: string  # External workflow identifier
      environment: string  # Environment - production, staging, development
      timeout: string  # Maximum execution time
      retry_policy:  # Retry configuration (optional)
        max_retries: number
        backoff_strategy: string  # linear, exponential
        initial_delay: number
    
    data_contract:  # Data contract definition (optional)
      input: object  # Input data schema
      output: object  # Output data schema
    
    monitoring:     # Monitoring configuration (optional)
      health_check:  # Health check configuration
        endpoint: string  # Health check URL
        interval: string  # Check interval
        timeout: string  # Health check timeout
      metrics:  # Metrics to track
        - name: string
          description: string
          target: string

# =============================================================================
# CONTEXT
# =============================================================================
context:            # State management and memory (optional)
  memory:           # Memory configuration (optional)
    type: string    # Memory type - session, persistent, temporary
    retention: string  # Retention period
    scope: string   # Memory scope - per_user, global, per_session
    storage:        # Storage configuration (optional)
      provider: string  # Storage provider
      ttl: number   # Time to live in seconds
      max_size: string  # Maximum storage size
    store: [string] # What to store
    exclude: [string]  # What not to store
  
  conversation:     # Conversation management (optional)
    max_turns: number  # Maximum conversation turns
    context_window: number  # Context window size
    summary_frequency: number  # How often to summarize
    summary_template: string  # Summary template
  
  business_context: # Business context (optional)
    company_info:   # Company information
      name: string
      industry: string
      products: [string]
      policies: [string]
    knowledge_base: # Knowledge base configuration (optional)
      type: string  # Knowledge base type
      provider: string  # Provider
      index_name: string  # Index name
      embedding_model: string  # Embedding model
  
  mcp_servers:     # Model Context Protocol servers (optional)
    - id: string   # Unique server identifier (required)
      name: string # Server name (required)
      description: string  # Server description (required)
      version: string  # MCP server version
      transport:      # Transport configuration (required)
        type: string  # Transport type - stdio, sse, websocket
        command: string  # Command to start server (for stdio)
        args: [string]  # Command arguments
        url: string  # Server URL (for sse/websocket)
        headers: object  # Custom headers
      capabilities:   # Server capabilities (optional)
        tools: [string]  # Available tools
        resources: [string]  # Available resources
        prompts: [string]  # Available prompts
      authentication: # Authentication configuration (optional)
        type: string  # Auth type - none, api_key, oauth, custom
        api_key: string  # API key (if applicable)
        token: string  # Access token (if applicable)
      security:      # Security configuration (optional)
        allowed_operations: [string]  # Allowed operations
        rate_limits: object  # Rate limiting
          requests_per_minute: number
          requests_per_hour: number
        timeout: number  # Request timeout in seconds

# =============================================================================
# EVALUATION
# =============================================================================
evaluation:         # Metrics and testing (optional)
  metrics:          # Performance metrics (optional)
    - name: string  # Metric name (required)
      description: string  # Metric description (required)
      target: any   # Target value
      measurement:  # Measurement configuration (optional)
        method: string  # Measurement method
        sample_size: number  # Sample size
        frequency: string  # Measurement frequency
        criteria: [string]  # Evaluation criteria
        percentiles: [number]  # For latency metrics
        scale: string  # For rating metrics
  
  test_cases:       # Automated test cases (optional)
    - id: string    # Test case ID (required)
      name: string  # Test case name (required)
      input: string # Test input (required)
      expected_behavior: string  # Expected behavior (required)
      category: string  # Test category - functional, safety, privacy, performance
      priority: string  # Test priority - low, medium, high, critical
  
  performance_tests: # Performance testing (optional)
    - name: string  # Test name (required)
      description: string  # Test description (required)
      concurrent_users: number  # Concurrent users
      duration: string  # Test duration
      target_response_time: string  # Target response time
      target_throughput: string  # Target throughput
      target_availability: string  # Target availability

# =============================================================================
# EXTENSIONS
# =============================================================================
extensions:         # Optional extensions (optional)
  vision_support: boolean  # Computer vision support
  multilingual: boolean  # Multilingual support
  audio_processing: boolean  # Audio processing support
  real_time_processing: boolean  # Real-time processing support
  mcp_support: boolean  # Model Context Protocol support
  automation_support: boolean  # External automation workflows support
  
  advanced:         # Advanced configurations (optional)
    computer_vision:  # Computer vision configuration
      enabled: boolean
      models: [object]
    audio_processing: # Audio processing configuration
      enabled: boolean
      models: [object]
    multimodal:      # Multimodal configuration
      enabled: boolean
      models: [object]
    mcp:            # Model Context Protocol configuration
      enabled: boolean
      default_timeout: number  # Default timeout for MCP operations
      retry_policy: object  # Retry configuration
        max_retries: number
        backoff_strategy: string  # linear, exponential
        initial_delay: number
    automation:     # Automation configuration
      enabled: boolean
      default_timeout: number  # Default timeout for automation operations
      retry_policy: object  # Retry configuration
        max_retries: number
        backoff_strategy: string  # linear, exponential
        initial_delay: number

# =============================================================================
# VALIDATION
# =============================================================================
validation:         # Validation configuration (optional)
  schema_version: string  # Schema version
  required_sections: [string]  # Required sections
  custom_validators:  # Custom validators (optional)
    - name: string
      description: string
      type: string  # reference, constraint, business_rule, performance, security
      severity: string  # error, warning, info
  json_schema_ref: string  # JSON Schema reference URL
  validation_level: string  # strict, moderate, lenient

# =============================================================================
# GOVERNANCE
# =============================================================================
governance:         # Governance and compliance (optional)
  maintainers:      # Project maintainers (required)
    - name: string
      email: string
      role: string  # lead, maintainer, reviewer, contributor
      github_username: string  # Optional
      organization: string  # Optional
      since: string  # Date joined (optional)
  
  contributors:     # Project contributors (optional)
    - name: string
      email: string
      role: string  # contributor, reviewer, tester, documentation
      contributions: [string]  # Optional
      github_username: string  # Optional
  
  review_process: string  # Review process - single_maintainer, two_approvals, consensus, voting
  approval_required: number  # Required approvals (1-10)
  testing_required: boolean  # Testing requirement
  documentation_required: boolean  # Documentation requirement
  security_review_required: boolean  # Security review requirement (optional)
  
  update_process:   # Update process (required)
    versioning: string  # Versioning strategy - semantic, calendar, major_minor, custom
    breaking_changes: string  # Breaking changes policy - require_migration, backward_compatible, deprecation_period, immediate
    deprecation_notice: string  # Deprecation notice period - "6 months"
    migration_guide: string  # Migration guide requirement - required, recommended, optional, not_needed
    changelog_required: boolean  # Changelog requirement (optional)
    release_notes_required: boolean  # Release notes requirement (optional)
  
  audit_trail:      # Audit trail configuration (optional)
    enabled: boolean
    retention_period: string  # "2 years"
    events_tracked: [string]  # create, update, delete, approve, reject, merge, release
    storage: string  # database, file, external, git_history
  
  compliance:       # Compliance requirements (optional)
    standards: [string]  # ISO27001, SOC2, GDPR, CCPA, HIPAA, PCI-DSS, NIST, Custom
    certifications:  # Compliance certifications (optional)
      - name: string
        status: string  # certified, in_progress, planned, not_applicable
        valid_until: string  # Date
    data_protection:  # Data protection requirements (optional)
      data_classification: string  # public, internal, confidential, restricted
      retention_policy: string
      encryption_required: boolean
  
  repository:       # Repository information (optional)
    url: string
    issues_url: string
    discussions_url: string
    wiki_url: string
    license_url: string

# =============================================================================
# EXAMPLES
# =============================================================================
# Minimal example:
# apai: "0.1.0"
# info:
#   title: "Simple AI Assistant"
#   version: "1.0.0"
#   description: "A basic AI assistant"
#   author: "AI Team"
#   license: "MIT"
#   ai_metadata:
#     domain: "customer_service"
#     complexity: "low"
#     deployment: "production"
#     last_updated: "2025-01-15T10:30:00Z"
# models:
#   - id: "gpt-4"
#     type: "LLM"
#     provider: "OpenAI"
#     name: "GPT-4"
#     version: "4.0"
#     purpose: "General purpose language model"
# prompts:
#   - id: "system_prompt"
#     role: "system"
#     template: "You are a helpful AI assistant."
# constraints:
#   - id: "safety"
#     name: "Content Safety"
#     type: "content_safety"
#     rule: "no_harmful_content"
#     severity: "critical"
#     enforcement: "automatic"
#     description: "Prevent harmful content"
# tasks:
#   - id: "chat"
#     name: "Chat Task"
#     description: "Handle conversations"
#     type: "conversational"
#     priority: "high"
#     steps:
#       - name: "respond"
#         action: "generate"
#         model: "gpt-4"
#         prompt: "system_prompt"
#         constraints: ["safety"]
